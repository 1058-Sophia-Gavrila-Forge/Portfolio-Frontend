trigger:
  - main
  - dev

pr:
  - main
  - dev

pool:
  vmImage: ubuntu-latest

parameters:
  - name: 'branchMain'
    type: string
    default: 'refs/heads/main'

stages:
  - stage: Build
    jobs:
      - template: ./build-job-template.yml
        parameters:
          jobName: 'Build'
          nodeVersion: '14.x'
  
  - stage: Analyze
    jobs:
      - template: ./code-coverage-analysis-template.yml
        parameters:
          serviceConnection: 'Forge-SonarCloud'
          organization: '1058-sophia-gavrila-forge'
          projectKey: '1058-Sophia-Gavrila-Forge_Portfolio-Frontend'
          projectName: 'Portfolio-Frontend'
  
  - stage: Dockerize
    jobs:
      - template: ./dockerize-template.yml
        parameters:
          jobName: 'Dockerize'
          containerRegistry: 'acr-team2'
          repository: 'forge-frontend'
          imageTag: 'latest'
          dockerPath: '**/Dockerfile'
          dockerContext: ${{ variables.Build.Repository.LocalPath }}
  
  - stage: Deploy
    jobs:
      - template: ./kubernetes-template.yml
        parameters:
          jobName: 'Deploy'
          ${{ if eq(variables['Build.SourceBranch'], parameters.branchMain) }}:
            clusterServiceConnection: 'may24-devops-team2-main-cluster'
          ${{ if ne(variables['Build.SourceBranch'], parameters.branchMain) }}:
            clusterServiceConnection: 'may24-devops-team2-dev-cluster'
          manifestPath: '**/frontend_manifest.yaml'
          namespace: 'team2'
  
      - template: ./discord-job-template.yml
        parameters:
          dependOn: Deploy
          name: 'Team2-P3-Frontend'
          title: 'Forge Portfolio Management System DevOps'
          discordVarGroup: Discord-Webhook-Info
    
        